apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka-ns
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.6.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 29092
              name: external
          env:
            # --- Zookeeper connection ---
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper.kafka-ns.svc.cluster.local:2181"

            # --- Broker ID (usa o índice do pod) ---
            - name: KAFKA_BROKER_ID
              value: "1"

            # --- Listeners internos e externos ---
            - name: KAFKA_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://:29092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://kafka-0.kafka.kafka-ns.svc.cluster.local:9092,EXTERNAL://localhost:29092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"

            # --- Log retention e diretórios ---
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"

            # --- Configurações opcionais ---
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"

          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 8Gi
